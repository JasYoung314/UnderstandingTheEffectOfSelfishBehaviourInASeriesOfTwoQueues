# This file was *autogenerated* from the file Analyse.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_8 = Integer(8); _sage_const_16 = Integer(16); _sage_const_24 = Integer(24)
import os,sys,csv

def evalfail(string):
    try:
        return eval(string)
    except:
        return string

files = os.listdir('.')
files = [e for e in files if '.csv' in e]
files.sort()
Data = []

for e in files :

    infile = open(e,'rb')
    input = csv.reader(infile)
    Data.append( [[evalfail(i) for i in row] for row in input])
    infile.close()

p = plot([],axes_labels = ['$ p $','PoA'])
q = plot([],axes_labels = ['$ p $','PoA'])
r = plot([],axes_labels = ['$ p $','Cost'])

r1data = []
r2data = []
styles = ['-',_sage_const_2 ,'--',_sage_const_2 ,':']
colors = rainbow(_sage_const_5 )
for e in Data:
    pdata = []
    qdata = []

    for i in e:
        pdata.append([i[_sage_const_8 ],(i[-_sage_const_3 ]/i[-_sage_const_1 ])])
        qdata.append([i[_sage_const_8 ],(i[-_sage_const_3 ]/i[-_sage_const_2 ])])

        if e[_sage_const_0 ][_sage_const_6 ] == _sage_const_2  and int(_sage_const_24 *e[_sage_const_0 ][_sage_const_7 ])+_sage_const_1  == _sage_const_8 :
            r1data.append([i[_sage_const_1 ],i[-_sage_const_1 ]])
            r2data.append([i[_sage_const_1 ],i[-_sage_const_2 ]])
    if not int(e[_sage_const_0 ][_sage_const_7 ]*_sage_const_24 )+_sage_const_1  == _sage_const_4  and not int(e[_sage_const_0 ][_sage_const_7 ]*_sage_const_24 )+_sage_const_1  == _sage_const_16 :
        p+= line(pdata,color = 'black',linestyle = styles[Data.index(e)],legend_label = '%s days %s hours' %(e[_sage_const_0 ][_sage_const_6 ],min(int(e[_sage_const_0 ][_sage_const_7 ]*_sage_const_24 )+_sage_const_1 ,_sage_const_24 )))
        q+= line(qdata,color = 'black',linestyle = styles[Data.index(e)],legend_label = '%s days %s hours' %(e[_sage_const_0 ][_sage_const_6 ],min(int(e[_sage_const_0 ][_sage_const_7 ]*_sage_const_24 )+_sage_const_1 ,_sage_const_24 )))

r += line(r1data,color = 'red', legend_label = 'Ana')
r += line(r2data, legend_label = 'Naor')

r.save('./costcomp.pdf')
p.save('./Ana.pdf')
q.save('./Naor.pdf')
